/* Specific to current test */if (os.isMac === true) {	var scriptIdentifier = '[i]nstaller/test.js';	var testToInclude = 'Installer/testMac.js';}if (os.isLinux === true) {	var scriptIdentifier = '[i]nstaller/test.js';	var testToInclude = 'Installer/testLinux.js';}if (os.isWindows === true) {	var testToInclude = 'Installer/testWindows.js';}/* The following lines contain generic stuff and should not be modified */var runFromCLI = true;var dontRequireUnitTest = true;var unitTest = require('unitTest');var env = unitTest.getenv();if (typeof env.TESTBASEPATH === 'undefined') {	if ((os.isMac === true || os.isLinux === true) && typeof scriptIdentifier !== 'undefined') {		var output = '';		var pwdWorker = new SystemWorker('bash -c "ps -o args | grep -i ' + scriptIdentifier + '"');		pwdWorker.onmessage = function() {		    output += arguments[0].data.toString();		};		pwdWorker.onterminated = function() {			exitWait();		}		wait();		try {			env.TESTBASEPATH = File('/' + output.split(/\s\//)[1].replace(/^\s+/g,'').replace(/\s+$/g,'')).parent.path;		}		catch (e) {			env.TESTBASEPATH = null;		}	}	else {		env.TESTBASEPATH = null;	}}if (typeof env.WORKSPACE === 'undefined') {	try {		env.WORKSPACE = process.userDocuments.path;	}	catch (e) {		env.WORKSPACE = env.TESTBASEPATH;	}}if (typeof testToInclude !== 'undefined' && env.TESTBASEPATH !== null) {	try {		var path = env.TESTBASEPATH + '/' + testToInclude;		path = path.replace(/\/+/g, '/');		include(path);	}	catch (e) {	}}if (typeof testCase === 'undefined') {	var testCase = {		name: 'Test not found',		testNotFound: function () {			Y.Assert.isTrue(false, 'Test not found');		}	};}unitTest.run(testCase).getXmlReport(env.WORKSPACE + '/report.xml');exitWait();