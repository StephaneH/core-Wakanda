exports.postMessage = function (message) {	if (message.name === 'httpServerDidStart') {		require('redirect').startHandlers();	} else if (message.name === 'httpServerWillStop') {		require('redirect').stopHandlers();	}};exports.startHandlers = function () {	addHttpRequestHandler('/redirect?.*', 'redirect', 'redirectHandler');	addHttpRequestHandler('/secondredirect?.*', 'redirect', 'redirectHandler');	addHttpRequestHandler('/destination?.*', 'redirect', 'destinationHandler');	addHttpRequestHandler('/crashredirect?.*', 'redirect', 'crashredirectHandler');};exports.stopHandlers = function () {	removeHttpRequestHandler('/redirect?.*', 'redirect', 'redirectHandler');	removeHttpRequestHandler('/secondredirect?.*', 'redirect', 'redirectHandler');	removeHttpRequestHandler('/destination?.*', 'redirect', 'destinationHandler');	removeHttpRequestHandler('/crashredirect?.*', 'redirect', 'crashredirectHandler');};exports.crashredirectHandler = function crashredirectHandler(request, response) {	var queryParameters = require('redirect').getQueryParameters(request);	if (typeof queryParameters.counter === 'undefined') {		queryParameters.counter = 0;	} else {		queryParameters.counter = parseInt(queryParameters.counter);	}	response.headers['Location'] = 'http:/127.0.0.1:8081/crashredirect?counter=' + (queryParameters.counter + 1);	response.statusCode = 307;};exports.getQueryParameters = function getQueryParameters(request) {	var queryParameters = {};	var queryEntities = request.urlQuery.split("&");	for (var queryEntitiesIdx = 0, queryEntitiesLength = queryEntities.length; queryEntitiesIdx < queryEntitiesLength; queryEntitiesIdx++) {		var keyValue = queryEntities[queryEntitiesIdx].split("=");		if (keyValue[0] !== "") queryParameters[keyValue[0]] = decodeURIComponent(keyValue[1]);	}	if (request.method === "POST" && request.body) {		queryEntities = request.body.split("&");		for (var queryEntitiesIdx = 0, queryEntitiesLength = queryEntities.length; queryEntitiesIdx < queryEntitiesLength; queryEntitiesIdx++) {			var keyValue = queryEntities[queryEntitiesIdx].split("=");			if (keyValue[0] !== "") queryParameters[keyValue[0]] = decodeURIComponent(keyValue[1]);		}	}	return queryParameters;};exports.redirectHandler = function redirectHandler(request, response) {	var queryParameters = require('redirect').getQueryParameters(request);	if (typeof queryParameters.counter === 'undefined') {		queryParameters.counter = 0;	} else {		queryParameters.counter = parseInt(queryParameters.counter);	}	if (queryParameters.counter === 0) response.headers['Location'] = 'http://127.0.0.1:8081/secondredirect?counter=' + (queryParameters.counter + 1);	else response.headers['Location'] = 'http://127.0.0.1:8081/destination?counter=' + (queryParameters.counter + 1);	response.statusCode = 307;};exports.destinationHandler = function destinationHandler(request, response) {	var queryParameters = require('redirect').getQueryParameters(request);	if (typeof queryParameters.counter === 'undefined') {		queryParameters.counter = 0;	} else {		queryParameters.counter = parseInt(queryParameters.counter);	}	response.contentType = 'text/plain';	return queryParameters.counter.toString();};